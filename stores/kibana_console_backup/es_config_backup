# 设置集群配置，transient瞬态，pesistent持久态
PUT /_cluster/settings
{
    "transient": {
        "cluster.routing.allocation.enable" : "all",
        "cluster.routing.allocation.disk.watermark.low": "90%"
    }
}
# 查看未分配的索引和原因
GET _cluster/allocation/explain?pretty


#ES基础语法
#非结构化地创建一个索引
PUT /employee
{
   "settings" : {
      "number_of_shards" : 1,
      "number_of_replicas" : 1
   }
}
#分布式节点建设
#更新其replicas状态，但是不能更新shards状态
PUT /test/_settings
{
   "settings" : {
      "number_of_replicas" : 0
   }
}
#创建索引，指定id建立索引
PUT /employee/_doc/1
{
    "name": "凯杰",
    "age": 30
}
#PUT是全量修改，如果不指定age，会导致age数据消失
PUT /employee/_doc/1
{
    "name": "凯杰2223"
}
#使用POST+upadte指定字段部分修改，避免数据丢失
POST /employee/_update/1
{
  "doc": {
    "name": "凯杰2223"
  }
}
#指定_create防止重复创建，如果已创建则失败
POST /employee/_create/1/
{
    "name": "凯1213132杰",
    "age": 30
}
#使用搜索全部，默认自带分页，不会显示全部
GET /employee/_search
#获取指定id
GET /employee/_doc/1
#不指定id建立索引
POST /employee/_doc/
{
    "name": "dsfsfsf",
    "age": 30
}
#删除文档
delete /employee/_doc/1
#删除索引
DELETE /employee


#使用结构化方式创建索引
#可以防止脏数据插入
PUT /employee/
{
    "settings" : {
      "number_of_shards" : 1,
      "number_of_replicas" : 1
   },
    "mappings" : {
            "properties" : {
                "name" : { "type" : "text" },
                "age" : { "type" : "integer" }
            }

    }
}
#es查询
#简单查询：
#主键查询
GET /employee/_doc/1
#查询所有
GET /employee/_search
{
 "query":{
   "match_all": {}
 }
}
#分页查询
GET /employee/_search
{
  "query":{
    "match_all": {}
  },
  "from":0,
  "size":1
}
#复杂查询
#带条件
GET /employee/_search
{
  "query":{
    "match": {"name":"ES"}
  }
}
#带排序
GET /employee/_search
{
  "query":{
    "match": {"name":"ES"}
  },
  "sort":[
  	{"age":{"order":"desc"}}
  ]
}
#带聚合
GET /employee/_search
{
  "query":{
    "match": {"name":"ES"}
  },
  "sort":[
  	{"age":{"order":"desc"}}
  ],
  "aggs":{
  	"group_by_age":{
  		"terms":{
  			"field":"age"
  		}
  	}
  }
}

